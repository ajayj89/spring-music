spring:
  jpa:
    generate-ddl: true
  application:
    name: spring-music
  info:
    build:
      enabled: true

info:
  app:
    name: spring-music
  spring:
    boot:
      version: "3.2.0"

server:
  port: 8080

management:
  server:
    port: 8081
  endpoints:
    web:
      exposure:
        include: info,health,env,metrics
    jmx:
      exposure:
        include: info,health,env,metrics
  endpoint:
    health:
      show-details: ALWAYS
      probes:
        enabled: true
    env:
      show-values: ALWAYS
    configprops:
      show-values: ALWAYS
  info:
    git:
      mode: full
    env:
      enabled: true
    java:
      enabled: true
  wavefront:
    application:
      name: spring-music
    uri: http://telegraf-collector.tanzu-telegraf-collector.svc.cluster.local:2878
    api-token: my-api-token
  tracing:
    sampling:
      probability: 1.0

logging:
  level:
    org:
      springframework: DEBUG

---
spring:
  config:
    activate:
      on-profile: http2

server:
  http2:
    enabled: true

---
spring:
  config:
    activate:
      on-profile: mysql
  datasource:
    url: "jdbc:mysql://localhost/music"
    driver-class-name: com.mysql.jdbc.Driver
    username:
    password:
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL55Dialect

---
spring:
  config:
    activate:
      on-profile: postgres
  datasource:
    url: "jdbc:postgresql://localhost/music"
    driver-class-name: org.postgresql.Driver
    username: postgres
    password:
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.ProgressDialect
